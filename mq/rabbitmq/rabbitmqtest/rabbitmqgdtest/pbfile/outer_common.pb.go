// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: xxxx/outer_common.proto

package pbfile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClientReportBussinessResult ClientReportBussinessResultResultType
type ClientReportBussinessResultResultType int32

const (
	ClientReportBussinessResultResultType_none         ClientReportBussinessResultResultType = 0
	ClientReportBussinessResultResultType_QrCode       ClientReportBussinessResultResultType = 1
	ClientReportBussinessResultResultType_QrCodeStatus ClientReportBussinessResultResultType = 2
)

// Enum value maps for ClientReportBussinessResultResultType.
var (
	ClientReportBussinessResultResultType_name = map[int32]string{
		0: "none",
		1: "QrCode",
		2: "QrCodeStatus",
	}
	ClientReportBussinessResultResultType_value = map[string]int32{
		"none":         0,
		"QrCode":       1,
		"QrCodeStatus": 2,
	}
)

func (x ClientReportBussinessResultResultType) Enum() *ClientReportBussinessResultResultType {
	p := new(ClientReportBussinessResultResultType)
	*p = x
	return p
}

func (x ClientReportBussinessResultResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientReportBussinessResultResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_e_invoice_proxy_ctl_outer_common_proto_enumTypes[0].Descriptor()
}

func (ClientReportBussinessResultResultType) Type() protoreflect.EnumType {
	return &file_e_invoice_proxy_ctl_outer_common_proto_enumTypes[0]
}

func (x ClientReportBussinessResultResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientReportBussinessResultResultType.Descriptor instead.
func (ClientReportBussinessResultResultType) EnumDescriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_outer_common_proto_rawDescGZIP(), []int{0}
}

// ----------------------- 代理客户端响应后到发送的rabbitmq消息内容:代理请求 ----------------------------------------
type RequestProxyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestSeq   string `protobuf:"bytes,1,opt,name=request_seq,json=requestSeq,proto3" json:"request_seq,omitempty"`       // 代理请求的唯一标识（用于异步响应）。inter_comm_server_client_msg.proto 的ProxyRequestRsp的seq与该request_seq一致
	EnterpriseId string `protobuf:"bytes,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"` // 社会信用代码/识别号
	ResultType   int32  `protobuf:"varint,3,opt,name=result_type,json=resultType,proto3" json:"result_type,omitempty"`      // 响应的代理请求类型；1：开具蓝票
	Body         []byte `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`                                     // 代理请求的接口返回的结果（透传结果）
}

func (x *RequestProxyResult) Reset() {
	*x = RequestProxyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestProxyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestProxyResult) ProtoMessage() {}

func (x *RequestProxyResult) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestProxyResult.ProtoReflect.Descriptor instead.
func (*RequestProxyResult) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_outer_common_proto_rawDescGZIP(), []int{0}
}

func (x *RequestProxyResult) GetRequestSeq() string {
	if x != nil {
		return x.RequestSeq
	}
	return ""
}

func (x *RequestProxyResult) GetEnterpriseId() string {
	if x != nil {
		return x.EnterpriseId
	}
	return ""
}

func (x *RequestProxyResult) GetResultType() int32 {
	if x != nil {
		return x.ResultType
	}
	return 0
}

func (x *RequestProxyResult) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

// ----------------------- 代理客户端响应后到发送的rabbitmq消息内容：业务上报 ----------------------------------------
type ClientReportBussinessResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestSeq   string                                `protobuf:"bytes,1,opt,name=request_seq,json=requestSeq,proto3" json:"request_seq,omitempty"`                                                              // 代理请求的唯一标识（用于异步响应）。可选。非空时有业务属性，用于串联异步流程业务
	EnterpriseId string                                `protobuf:"bytes,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`                                                        // 社会信用代码/识别号
	ResultType   ClientReportBussinessResultResultType `protobuf:"varint,3,opt,name=result_type,json=resultType,proto3,enum=pbfile.ClientReportBussinessResultResultType" json:"result_type,omitempty"` // 上报的业务类型；1：实名认证二维码上报；2：实人认证二维码扫码状态上报
	Body         []byte                                `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`                                                                                            // 消息体的内容；json字节序
}

func (x *ClientReportBussinessResult) Reset() {
	*x = ClientReportBussinessResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientReportBussinessResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientReportBussinessResult) ProtoMessage() {}

func (x *ClientReportBussinessResult) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientReportBussinessResult.ProtoReflect.Descriptor instead.
func (*ClientReportBussinessResult) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_outer_common_proto_rawDescGZIP(), []int{1}
}

func (x *ClientReportBussinessResult) GetRequestSeq() string {
	if x != nil {
		return x.RequestSeq
	}
	return ""
}

func (x *ClientReportBussinessResult) GetEnterpriseId() string {
	if x != nil {
		return x.EnterpriseId
	}
	return ""
}

func (x *ClientReportBussinessResult) GetResultType() ClientReportBussinessResultResultType {
	if x != nil {
		return x.ResultType
	}
	return ClientReportBussinessResultResultType_none
}

func (x *ClientReportBussinessResult) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

// 上报的业务类型result_type=1时body结构
type QrCodeBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthId string `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"` // 实人认证ID
	QrCode string `protobuf:"bytes,2,opt,name=qr_code,json=qrCode,proto3" json:"qr_code,omitempty"` // 实人认证base64二维码
}

func (x *QrCodeBody) Reset() {
	*x = QrCodeBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrCodeBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrCodeBody) ProtoMessage() {}

func (x *QrCodeBody) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrCodeBody.ProtoReflect.Descriptor instead.
func (*QrCodeBody) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_outer_common_proto_rawDescGZIP(), []int{2}
}

func (x *QrCodeBody) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

func (x *QrCodeBody) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

// 上报的业务类型result_type=2时body结构
type QrCodeStatusBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthId       string `protobuf:"bytes,1,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`                      // 实人认证ID
	QrCodeStatus int32  `protobuf:"varint,2,opt,name=qr_code_status,json=qrCodeStatus,proto3" json:"qr_code_status,omitempty"` // 二维码扫码状态；1：未处理，2：实人完成，3：刷新二维码，4：需要重新登录税局
}

func (x *QrCodeStatusBody) Reset() {
	*x = QrCodeStatusBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrCodeStatusBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrCodeStatusBody) ProtoMessage() {}

func (x *QrCodeStatusBody) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrCodeStatusBody.ProtoReflect.Descriptor instead.
func (*QrCodeStatusBody) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_outer_common_proto_rawDescGZIP(), []int{3}
}

func (x *QrCodeStatusBody) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

func (x *QrCodeStatusBody) GetQrCodeStatus() int32 {
	if x != nil {
		return x.QrCodeStatus
	}
	return 0
}

var File_e_invoice_proxy_ctl_outer_common_proto protoreflect.FileDescriptor

var file_e_invoice_proxy_ctl_outer_common_proto_rawDesc = []byte{
	0x0a, 0x26, 0x65, 0x2d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2d, 0x63, 0x74, 0x6c, 0x2f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xd1, 0x01, 0x0a,
	0x1b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x73,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x58, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x3e, 0x0a, 0x0a, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x51, 0x0a, 0x10, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2a, 0x4f, 0x0a, 0x25, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x10, 0x02, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x3b, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_e_invoice_proxy_ctl_outer_common_proto_rawDescOnce sync.Once
	file_e_invoice_proxy_ctl_outer_common_proto_rawDescData = file_e_invoice_proxy_ctl_outer_common_proto_rawDesc
)

func file_e_invoice_proxy_ctl_outer_common_proto_rawDescGZIP() []byte {
	file_e_invoice_proxy_ctl_outer_common_proto_rawDescOnce.Do(func() {
		file_e_invoice_proxy_ctl_outer_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_e_invoice_proxy_ctl_outer_common_proto_rawDescData)
	})
	return file_e_invoice_proxy_ctl_outer_common_proto_rawDescData
}

var file_e_invoice_proxy_ctl_outer_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_e_invoice_proxy_ctl_outer_common_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_e_invoice_proxy_ctl_outer_common_proto_goTypes = []interface{}{
	(ClientReportBussinessResultResultType)(0), // 0: pbfile.ClientReportBussinessResultResultType
	(*RequestProxyResult)(nil),                 // 1: pbfile.RequestProxyResult
	(*ClientReportBussinessResult)(nil),        // 2: pbfile.ClientReportBussinessResult
	(*QrCodeBody)(nil),                         // 3: pbfile.QrCodeBody
	(*QrCodeStatusBody)(nil),                   // 4: pbfile.QrCodeStatusBody
}
var file_e_invoice_proxy_ctl_outer_common_proto_depIdxs = []int32{
	0, // 0: pbfile.ClientReportBussinessResult.result_type:type_name -> pbfile.ClientReportBussinessResultResultType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_e_invoice_proxy_ctl_outer_common_proto_init() }
func file_e_invoice_proxy_ctl_outer_common_proto_init() {
	if File_e_invoice_proxy_ctl_outer_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestProxyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientReportBussinessResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrCodeBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_outer_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrCodeStatusBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e_invoice_proxy_ctl_outer_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e_invoice_proxy_ctl_outer_common_proto_goTypes,
		DependencyIndexes: file_e_invoice_proxy_ctl_outer_common_proto_depIdxs,
		EnumInfos:         file_e_invoice_proxy_ctl_outer_common_proto_enumTypes,
		MessageInfos:      file_e_invoice_proxy_ctl_outer_common_proto_msgTypes,
	}.Build()
	File_e_invoice_proxy_ctl_outer_common_proto = out.File
	file_e_invoice_proxy_ctl_outer_common_proto_rawDesc = nil
	file_e_invoice_proxy_ctl_outer_common_proto_goTypes = nil
	file_e_invoice_proxy_ctl_outer_common_proto_depIdxs = nil
}
