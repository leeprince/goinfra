ARG CGO=1
ARG env=dev
ARG xconf="http://10.22.32.14:18080"

#FROM ccr.ccs.tencentyun.com/golden-cloud/golang-git-base:1.20-bullseye-extension AS builder
FROM ccr.ccs.tencentyun.com/golden-cloud/golang-git-base:1.20-bullseye-extra  AS builder


ARG CGO
ENV CGO_ENABLED=1
ENV GOARCH=amd64
ENV GOOS=linux
ENV GO111MODULE=on



WORKDIR /build/
COPY . /build/file-transform-srv/



	
RUN set -ex && \
    cd /build && \
	cd /build/file-transform-srv && go env -w GOPROXY=https://goproxy.cn,direct && \
	go get github.com/SebastiaanKlippert/go-wkhtmltopdf && \
	go get github.com/disintegration/imaging && \
	go get github.com/fogleman/gg && \
	go get github.com/ninetwentyfour/go-wkhtmltoimage && \
	go get github.com/panjf2000/ants && \
	go get github.com/pieterclaerhout/go-html && \
	go get github.com/adrg/go-wkhtmltopdf && \
	export PATH=./bin/:${PATH} && \
	chmod +x ./bin/protoc && \
	chmod +x ./docker_start.sh && \
	go install google.golang.org/protobuf/cmd/protoc-gen-go@latest && \
	go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest && \
	go install github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway@latest && \
	go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@latest && \
	wget https://golden-devops-1258944054.cos.ap-guangzhou.myqcloud.com/package/linux/wkhtmltox_0.12.6.1-2.bullseye_amd64.deb && \
	dpkg -i wkhtmltox_0.12.6.1-2.bullseye_amd64.deb && \
	make -f Makefile.proto && \
	go mod tidy && \
	go mod vendor && \
    CGO_ENABLED=${CGO_ENABLED} GOARCH=${GOARCH} GOOS=${GOOS} go build -a -o file-transform-srv  && \
	cd /build/file-transform-srv/client && \
	CGO_ENABLED=${CGO_ENABLED} GOARCH=${GOARCH} GOOS=${GOOS} go build -a -o client

#FROM ccr.ccs.tencentyun.com/golden-cloud/debian-base:buster
#FROM ccr.ccs.tencentyun.com/golden-cloud/golang-git-base:1.20-bullseye-extension
FROM ccr.ccs.tencentyun.com/golden-cloud/golang-git-base:1.20-bullseye-extra 

ARG env
ARG xconf

ENV MICRO_SRV_ENV=$env
ENV MICRO_CONFIG_SRV_ADDR=$xconf


WORKDIR /data

COPY --from=builder /build/file-transform-srv/client/client .
COPY --from=builder /build/file-transform-srv/file-transform-srv .
COPY --from=builder /build/file-transform-srv/docker_start.sh .
COPY --from=builder /build/file-transform-srv/lib  .
COPY --from=builder /build/file-transform-srv/etc/ImageMagick-6/policy.xml  /etc/ImageMagick-6/policy.xml

RUN set -ex && \
wget https://golden-devops-1258944054.cos.ap-guangzhou.myqcloud.com/package/linux/wkhtmltox_0.12.6.1-2.bullseye_amd64.deb && \
dpkg -i wkhtmltox_0.12.6.1-2.bullseye_amd64.deb && \
rm wkhtmltox_0.12.6.1-2.bullseye_amd64.deb
#rm wkhtmltox_0.12.6.1-2.bullseye_amd64.deb && \
#apt-get update && \
#apt-get install imagemagick -y && \
#apt-get install  ghostscript -y

VOLUME ["/data/log"]

EXPOSE 8080
EXPOSE 50009
ENTRYPOINT ["./file-transform-srv"]

